# -*- coding: utf-8 -*-
"""Part1_prétraitement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uDQu69ohig8uLug_CJhJTqu11LDj4HLW
"""

import pickle
import numpy as np
from datetime import date 
import numpy as np
import pandas as pd

input_file = ("Entrez le chemin du fichier csv : ") # on demande à l'utilisateur de rentrer le chemin du fichier csv

df1 = pd.read_csv(input_file) # on lit le fichier csv
print(df1.describe()) # on affiche les statistiques descriptives du fichier csv

nan_in_col  = df1[df1['RANGADH'].isnull()]  # on affiche les lignes qui contiennent des valeurs manquantes dans la colonne RANGADH
print(nan_in_col) # on affiche les lignes qui contiennent des valeurs manquantes dans la colonne RANGADH

df1['DTADH'] = pd.to_datetime(df1['DTADH']) # on convertit la colonne DTADH en type datetime
dateAdh= df1['DTADH'] # on crée une variable dateAdh qui contient la colonne DTADH

def calculMoisAdh(dateADH): # on crée une fonction qui permet de calculer le mois d'adhésion
  mois = dateADH.month # on crée une variable mois qui contient le mois d'adhésion présent dans la date d'adhésion
  return mois # on retourne le mois d'adhésion

def calculAnneeAdh(dateADH): # on crée une fonction qui permet de calculer l'année d'adhésion
  annee = dateADH.year # on crée une variable annee qui contient l'année d'adhésion présente dans la date d'adhésion
  return annee # on retourne l'année d'adhésion


Mois_Adhesion=[] # on crée une liste vide qui contiendra les mois d'adhésion
for i in df1.index: # on parcourt les lignes du dataframe
  Mois_Adhesion.append(calculMoisAdh(dateAdh[i])) # on ajoute le mois d'adhésion de chaque ligne dans la liste Mois_Adhesion

Annee_Adhesion=[] # on crée une liste vide qui contiendra les années d'adhésion
for i in df1.index: # on parcourt les lignes du dataframe
  Annee_Adhesion.append(calculAnneeAdh(dateAdh[i])) # on ajoute l'année d'adhésion de chaque ligne dans la liste Annee_Adhesion



df1['MADH'] = np.array(Mois_Adhesion).tolist() # on ajoute la liste Mois_Adhesion dans le dataframe df1
df1['ANNEEADH'] = np.array(Annee_Adhesion).tolist() # on ajoute la liste Annee_Adhesion dans le dataframe df1
df1.drop('DTADH', inplace=True, axis=1) # on supprime la colonne DTADH du dataframe df1
print(df1.head()) # on affiche les 5 premières lignes du dataframe df1

df1.to_csv("Donnees/donnees.csv",index=False) # on enregistre le dataframe df1 dans un fichier csv

df_new = df1[['ADH', 'RANGADH']] # on crée un nouveau dataframe qui contient les colonnes ADH et RANGADH

df_new.loc[df_new['ADH'] == 0, ['RANGADH']] = '0 0-0' # on remplace les valeurs manquantes de la colonne RANGADH par la valeur '0 0-0' lorsque la valeur de la colonne ADH est égale à 0
print(df_new) # on affiche le nouveau dataframe

df1['RANGADH']=df_new['RANGADH'] # on remplace la colonne RANGADH du dataframe df1 par la colonne RANGADH du dataframe df_new
print(df1['RANGADH'].value_counts()) # on affiche le nombre de valeurs différentes de la colonne RANGADH
print(df1.head()) # on affiche les 5 premières lignes du dataframe df1

df1.to_csv("donnees.csv",index=False) # on enregistre le dataframe df1 dans un fichier csv


df3 = pd.read_csv("donnees.csv") # on lit le fichier csv
df3.drop('CDMOTDEM', inplace=True, axis=1) # on supprime la colonne CDMOTDEM du dataframe df3
anneeDem= df3['ANNEEDEM'] # on crée une variable anneeDem qui contient la colonne ANNEEDEM
def aDemissionne(anneeDem): # on crée une fonction qui permet de savoir si un adhérent a démissionné ou non
  if(anneeDem==1900): # si l'année de démission est égale à 1900, l'adhérent n'a pas démissionné
    dem = 0
  else: # sinon, l'adhérent a démissionné
    dem =1
  return dem # on retourne la valeur 0 ou 1


Demission=[] # on crée une liste vide qui contiendra les valeurs 0 ou 1
for i in df3.index: # on parcourt les lignes du dataframe
    Demission.append(aDemissionne(anneeDem[i])) # on ajoute la valeur 0 ou 1 de chaque ligne dans la liste Demission
df3['DEM'] = np.array(Demission).tolist() # on ajoute la liste Demission dans le dataframe df3
df3.drop('ANNEEDEM',inplace=True, axis=1) # on supprime la colonne ANNEEDEM du dataframe df3
df3.to_csv("/Donnees/donnees.csv",index=False) # on enregistre le dataframe df3 dans un fichier csv